version: '3.8'

services:
  pg_db:
    image: postgis/postgis:12-master
    container_name: pg_db
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
        - ts_postgres_data:/var/lib/postgresql/data/
  pg_api:
    image: ${API_IMAGE}
    container_name: pg_api
    restart: always
    command: gunicorn --bind 0.0.0.0:8000 pgadapter:app
    ports:
      - 8000
    environment:
      - DATABASE_URI=postgresql://${DB_USER}:${DB_PASSWORD}@pg_db:5432/${DB_NAME}
      - PG_SERVICE_SCHEMA=${PG_SERVICE_SCHEMA}
      - PG_SERVICE_USER=${PG_SERVICE_USER}
      - PG_SERVICE_USER_PASSWORD=${PG_SERVICE_USER_PASSWORD}
      - DB=postgres
      - DB_HOST=pg_db
      - DB_PORT=5432
      - ROLLBAR_SERVER_TOKEN=${ROLLBAR_SERVER_TOKEN}
    depends_on: 
      - pg_db
    volumes:
      - ./database/initdb:/docker-entrypoint-initdb.d/
  pg_tileserv:
    image: pramsey/pg_tileserv:20201211
    container_name: pg_tileserv
    restart: always
    environment:
      - DATABASE_URL=postgresql://${PG_SERVICE_USER}:${PG_SERVICE_USER_PASSWORD}@pg_db:5432/${DB_NAME}
    volumes:
      - ./pg_tileserv/config/pg_tileserv.toml:/config/pg_tileserv.toml
    depends_on: 
      - pg_db
      - pg_api
    ports:
      - 7800:7800
    healthcheck:
      test: curl --fail -s http://localhost:7800/ ||exit 1
      interval: 5s
      timeout: 5s
      retries: 105
  pg_featureserv:
    image: pramsey/pg_featureserv:20200408
    container_name: pg_featureserv
    restart: always
    environment:
      - DATABASE_URL=postgresql://${PG_SERVICE_USER}:${PG_SERVICE_USER_PASSWORD}@pg_db:5432/${DB_NAME}
    depends_on: 
      - pg_db
      - pg_api
  pg_varnish:
    image: ${VARNISH_IMAGE}
    restart: always
    container_name: pg_varnish
    ports:
      - 80
    environment: 
      - BACKEND=pg_tileserv
      - BACKEND_HOST=pg_tileserv
      - BACKEND_PORT=7800
    volumes:
      - ./varnish/default.vcl/:/etc/varnish/default.vcl
    depends_on: 
      - pg_tileserv
  pg_nginx:
    image: nginx:1.17-alpine
    container_name: pg_nginx
    restart: always
    ports:
      - ${PORT}:80
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on: 
      - pg_api
      - pg_featureserv
      - pg_tileserv
volumes:
  ts_postgres_data: