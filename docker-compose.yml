version: '3.8'

services:
  pg_db:
    image: postgis/postgis:12-master
    container_name: pg_db
    command: postgres -c shared_buffers=${SHARED_BUFFERS} -c effective_cache_size=${EFFECTIVE_CACHE_SIZE} -c max_worker_processes=${MAX_WORKER_PROCESSES} -c max_parallel_workers=${MAX_PARALLEL_WORKERS}
    restart: ${RESTART_POLICY}
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - ${DB_EXTERNAL_PORT}:5432
    volumes:
        - ts_postgres_data:/var/lib/postgresql/data/
  pg_api:
    build: ./app
    image: ${API_IMAGE}
    container_name: pg_api
    command: gunicorn --bind 0.0.0.0:8000 pgadapter:app
    restart: ${RESTART_POLICY}
    ports:
      - 8000
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://${DB_USER}:${DB_PASSWORD}@pg_db:5432/${DB_NAME}
      - PG_SERVICE_SCHEMA=${PG_SERVICE_SCHEMA}
      - PG_SERVICE_USER=${PG_SERVICE_USER}
      - PG_SERVICE_USER_PASSWORD=${PG_SERVICE_USER_PASSWORD}
      - ROLLBAR_SERVER_TOKEN=${ROLLBAR_SERVER_TOKEN}
      - DB=postgres
      - DB_HOST=pg_db
      - DB_PORT=5432
    depends_on: 
      - pg_db
  pg_tileserv:
    image: pramsey/pg_tileserv:20201211
    container_name: pg_tileserv
    restart: ${RESTART_POLICY}
    environment:
      - DATABASE_URL=postgresql://${PG_SERVICE_USER}:${PG_SERVICE_USER_PASSWORD}@pg_db:5432/${DB_NAME}
    volumes:
      - ./pg_tileserv/config/pg_tileserv.toml:/config/pg_tileserv.toml
    depends_on: 
      - pg_db
      - pg_api
    ports:
      - 7800:7800
    healthcheck:
      test: curl --fail -s http://localhost:7800/ ||exit 1
      interval: 5s
      timeout: 5s
      retries: 105
  pg_featureserv:
    image: pramsey/pg_featureserv:20200408
    container_name: pg_featureserv
    restart: ${RESTART_POLICY}
    ports:
      - 7801:9000
    environment:
      - DATABASE_URL=postgresql://${PG_SERVICE_USER}:${PG_SERVICE_USER_PASSWORD}@pg_db:5432/${DB_NAME}
    depends_on: 
      - pg_db
      - pg_api
  pg_varnish:
    build: ./varnish
    image: localhost:5000/pg-varnish:dev
    container_name: pg_varnish
    restart: ${RESTART_POLICY}
    ports:
      - 80
    environment: 
      - BACKEND=pg_tileserv
      - BACKEND_HOST=pg_tileserv
      - BACKEND_PORT=7800
    volumes:
      - ./varnish/default.vcl/:/etc/varnish/default.vcl
    depends_on: 
      - pg_tileserv
  pg_nginx:
    image: nginx:1.17-alpine
    container_name: pg_nginx
    restart: ${RESTART_POLICY}
    ports:
      - ${PORT}:80
    volumes:
      - ./nginx/default.conf/:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on: 
      - pg_api
      - pg_featureserv
      - pg_tileserv
volumes:
  ts_postgres_data: