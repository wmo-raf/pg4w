version: '3.8'

services:
  pg_db:
    image: postgis/postgis:12-master
    container_name: pg_db
    command: postgres -c shared_buffers=${SHARED_BUFFERS} -c effective_cache_size=${EFFECTIVE_CACHE_SIZE} -c max_worker_processes=${MAX_WORKER_PROCESSES} -c max_parallel_workers=${MAX_PARALLEL_WORKERS}
    restart: ${RESTART_POLICY}
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432
    volumes:
        - ${DB_VOLUME_PATH}:/var/lib/postgresql/data/
  pg_data_connector:
    build: ./pg_data_connector
    image: africahazardswatch.org/pg-data-connector:latest
    container_name: pg_data_connector
    command: gunicorn --bind 0.0.0.0:8000 pgadapter:app
    restart: ${RESTART_POLICY}
    ports:
      - 8000
    environment:
      - WAIT_HOSTS=pg_db:5432
      - WAIT_TIMEOUT=60
      - SQLALCHEMY_DATABASE_URI=postgresql://${DB_USER}:${DB_PASSWORD}@pg_db:5432/${DB_NAME}
      - PG_SERVICE_SCHEMA=${PG_SERVICE_SCHEMA}
      - PG_SERVICE_USER=${PG_SERVICE_USER}
      - PG_SERVICE_USER_PASSWORD=${PG_SERVICE_USER_PASSWORD}
      - ROLLBAR_SERVER_TOKEN=${ROLLBAR_SERVER_TOKEN}
      - DB=postgres
      - DB_HOST=pg_db
      - DB_PORT=5432
      - FLASK_APP=pgadapter/__init__.py
    depends_on: 
      - pg_db
  pg_tileserv:
    build: ./pg_tileserv
    image: africahazardswatch.org/pg-tileserv:latest
    container_name: pg_tileserv
    restart: ${RESTART_POLICY}
    environment:
      - WAIT_HOSTS=pg_data_connector:8000
      - WAIT_TIMEOUT=60
      - DATABASE_URL=postgresql://${PG_SERVICE_USER}:${PG_SERVICE_USER_PASSWORD}@pg_db:5432/${DB_NAME}
    volumes:
      - ./pg_tileserv/config/pg_tileserv.toml:/config/pg_tileserv.toml
    depends_on: 
      - pg_db
      - pg_data_connector
    ports:
      - 7800
  pg_featureserv:
    build: ./pg_featureserv
    image: africahazardswatch.org/pg-featureserv:latest
    container_name: pg_featureserv
    restart: ${RESTART_POLICY}
    ports:
      - 9000
    environment:
      - WAIT_HOSTS=pg_data_connector:8000
      - WAIT_TIMEOUT=60
      - DATABASE_URL=postgresql://${PG_SERVICE_USER}:${PG_SERVICE_USER_PASSWORD}@pg_db:5432/${DB_NAME}
    depends_on: 
      - pg_db
      - pg_data_connector
  pg_varnish:
    build: ./varnish
    image: africahazardswatch.org/pg-varnish:latest
    container_name: pg_varnish
    restart: ${RESTART_POLICY}
    ports:
      - 80
    environment:
      - WAIT_HOSTS=pg_tileserv:7800
      - WAIT_TIMEOUT=60
    volumes:
      - ./varnish/default.vcl/:/etc/varnish/default.vcl
    depends_on: 
      - pg_tileserv
  pg_nginx:
    image: nginx:1.17-alpine
    container_name: pg_nginx
    restart: ${RESTART_POLICY}
    ports:
      - 80
    volumes:
      - ./nginx/default.conf/:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on: 
      - pg_data_connector
      - pg_featureserv
      - pg_tileserv
networks:
    default:
      name:  ${AHW_DOCKER_NETWORK}
      external: true